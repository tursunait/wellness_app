
==> Audit <==
|------------|-----------------|----------|----------------------|---------|---------------------|---------------------|
|  Command   |      Args       | Profile  |         User         | Version |     Start Time      |      End Time       |
|------------|-----------------|----------|----------------------|---------|---------------------|---------------------|
| start      |                 | minikube | DESKTOP-BC0DE37\Afag | v1.35.0 | 01 May 25 05:50 +04 |                     |
| docker-env |                 | minikube | DESKTOP-BC0DE37\Afag | v1.35.0 | 01 May 25 05:57 +04 |                     |
| start      | --driver=docker | minikube | DESKTOP-BC0DE37\Afag | v1.35.0 | 01 May 25 06:05 +04 |                     |
| delete     |                 | minikube | DESKTOP-BC0DE37\Afag | v1.35.0 | 01 May 25 06:07 +04 | 01 May 25 06:07 +04 |
| start      | --driver=docker | minikube | DESKTOP-BC0DE37\Afag | v1.35.0 | 01 May 25 06:07 +04 |                     |
|------------|-----------------|----------|----------------------|---------|---------------------|---------------------|


==> Last Start <==
Log file created at: 2025/05/01 06:07:26
Running on machine: DESKTOP-BC0DE37
Binary: Built with gc go1.23.4 for windows/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I0501 06:07:26.106825    8776 out.go:345] Setting OutFile to fd 516 ...
I0501 06:07:26.107553    8776 out.go:397] isatty.IsTerminal(516) = true
I0501 06:07:26.107553    8776 out.go:358] Setting ErrFile to fd 516...
I0501 06:07:26.107553    8776 out.go:397] isatty.IsTerminal(516) = true
I0501 06:07:26.137329    8776 out.go:352] Setting JSON to false
I0501 06:07:26.143976    8776 start.go:129] hostinfo: {"hostname":"DESKTOP-BC0DE37","uptime":529,"bootTime":1746064716,"procs":345,"os":"windows","platform":"Microsoft Windows 11 Pro","platformFamily":"Standalone Workstation","platformVersion":"10.0.22635.5305 Build 22635.5305","kernelVersion":"10.0.22635.5305 Build 22635.5305","kernelArch":"x86_64","virtualizationSystem":"","virtualizationRole":"","hostId":"82585dea-1a15-43a8-9235-39ee64a97605"}
W0501 06:07:26.143976    8776 start.go:137] gopshost.Virtualization returned error: not implemented yet
I0501 06:07:26.146268    8776 out.go:177] 😄  minikube v1.35.0 on Microsoft Windows 11 Pro 10.0.22635.5305 Build 22635.5305
I0501 06:07:26.147618    8776 notify.go:220] Checking for updates...
I0501 06:07:26.148668    8776 driver.go:394] Setting default libvirt URI to qemu:///system
I0501 06:07:26.291573    8776 docker.go:123] docker version: linux-28.0.4:Docker Desktop 4.40.0 (187762)
I0501 06:07:26.308648    8776 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0501 06:07:26.765579    8776 info.go:266] docker info: {ID:ab8d5f2d-a09a-4345-9c34-3f0ae7e855c5 Containers:17 ContainersRunning:0 ContainersPaused:0 ContainersStopped:17 Images:8 Driver:overlayfs DriverStatus:[[driver-type io.containerd.snapshotter.v1]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:false CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:false BridgeNfIP6Tables:false Debug:false NFd:70 OomKillDisable:false NGoroutines:91 SystemTime:2025-05-01 02:07:26.744548536 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:17 KernelVersion:6.6.87.1-microsoft-standard-WSL2 OperatingSystem:Docker Desktop OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[::1/128 127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:8 MemTotal:8195903488 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[com.docker.desktop.address=npipe://\\.\pipe\docker_cli] ExperimentalBuild:false ServerVersion:28.0.4 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:753481ec61c7c8955a23d6ff7bc8e4daed455734 Expected:753481ec61c7c8955a23d6ff7bc8e4daed455734} RuncCommit:{ID:v1.2.5-0-g59923ef Expected:v1.2.5-0-g59923ef} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=unconfined name=cgroupns] ProductLicense: Warnings:[WARNING: DOCKER_INSECURE_NO_IPTABLES_RAW is set WARNING: daemon is not using the default seccomp profile] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:ai Path:C:\Program Files\Docker\cli-plugins\docker-ai.exe SchemaVersion:0.1.0 ShortDescription:Docker AI Agent - Ask Gordon Vendor:Docker Inc. Version:v1.1.3] map[Name:buildx Path:C:\Program Files\Docker\cli-plugins\docker-buildx.exe SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.22.0-desktop.1] map[Name:cloud Path:C:\Program Files\Docker\cli-plugins\docker-cloud.exe SchemaVersion:0.1.0 ShortDescription:Docker Cloud Vendor:Docker Inc. Version:0.2.20] map[Name:compose Path:C:\Program Files\Docker\cli-plugins\docker-compose.exe SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.34.0-desktop.1] map[Name:debug Path:C:\Program Files\Docker\cli-plugins\docker-debug.exe SchemaVersion:0.1.0 ShortDescription:Get a shell into any image or container Vendor:Docker Inc. Version:0.0.38] map[Name:desktop Path:C:\Program Files\Docker\cli-plugins\docker-desktop.exe SchemaVersion:0.1.0 ShortDescription:Docker Desktop commands (Beta) Vendor:Docker Inc. Version:v0.1.6] map[Name:dev Path:C:\Program Files\Docker\cli-plugins\docker-dev.exe SchemaVersion:0.1.0 ShortDescription:Docker Dev Environments Vendor:Docker Inc. Version:v0.1.2] map[Name:extension Path:C:\Program Files\Docker\cli-plugins\docker-extension.exe SchemaVersion:0.1.0 ShortDescription:Manages Docker extensions Vendor:Docker Inc. Version:v0.2.27] map[Name:init Path:C:\Program Files\Docker\cli-plugins\docker-init.exe SchemaVersion:0.1.0 ShortDescription:Creates Docker-related starter files for your project Vendor:Docker Inc. Version:v1.4.0] map[Name:sbom Path:C:\Program Files\Docker\cli-plugins\docker-sbom.exe SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scout Path:C:\Program Files\Docker\cli-plugins\docker-scout.exe SchemaVersion:0.1.0 ShortDescription:Docker Scout Vendor:Docker Inc. Version:v1.17.0]] Warnings:<nil>}}
I0501 06:07:26.766640    8776 out.go:177] ✨  Using the docker driver based on user configuration
I0501 06:07:26.767728    8776 start.go:297] selected driver: docker
I0501 06:07:26.767728    8776 start.go:901] validating driver "docker" against <nil>
I0501 06:07:26.767728    8776 start.go:912] status for docker: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0501 06:07:26.806810    8776 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0501 06:07:27.159256    8776 info.go:266] docker info: {ID:ab8d5f2d-a09a-4345-9c34-3f0ae7e855c5 Containers:17 ContainersRunning:0 ContainersPaused:0 ContainersStopped:17 Images:8 Driver:overlayfs DriverStatus:[[driver-type io.containerd.snapshotter.v1]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:false CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:false BridgeNfIP6Tables:false Debug:false NFd:70 OomKillDisable:false NGoroutines:91 SystemTime:2025-05-01 02:07:27.13755214 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:17 KernelVersion:6.6.87.1-microsoft-standard-WSL2 OperatingSystem:Docker Desktop OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[::1/128 127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:8 MemTotal:8195903488 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[com.docker.desktop.address=npipe://\\.\pipe\docker_cli] ExperimentalBuild:false ServerVersion:28.0.4 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:753481ec61c7c8955a23d6ff7bc8e4daed455734 Expected:753481ec61c7c8955a23d6ff7bc8e4daed455734} RuncCommit:{ID:v1.2.5-0-g59923ef Expected:v1.2.5-0-g59923ef} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=unconfined name=cgroupns] ProductLicense: Warnings:[WARNING: DOCKER_INSECURE_NO_IPTABLES_RAW is set WARNING: daemon is not using the default seccomp profile] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:ai Path:C:\Program Files\Docker\cli-plugins\docker-ai.exe SchemaVersion:0.1.0 ShortDescription:Docker AI Agent - Ask Gordon Vendor:Docker Inc. Version:v1.1.3] map[Name:buildx Path:C:\Program Files\Docker\cli-plugins\docker-buildx.exe SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.22.0-desktop.1] map[Name:cloud Path:C:\Program Files\Docker\cli-plugins\docker-cloud.exe SchemaVersion:0.1.0 ShortDescription:Docker Cloud Vendor:Docker Inc. Version:0.2.20] map[Name:compose Path:C:\Program Files\Docker\cli-plugins\docker-compose.exe SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.34.0-desktop.1] map[Name:debug Path:C:\Program Files\Docker\cli-plugins\docker-debug.exe SchemaVersion:0.1.0 ShortDescription:Get a shell into any image or container Vendor:Docker Inc. Version:0.0.38] map[Name:desktop Path:C:\Program Files\Docker\cli-plugins\docker-desktop.exe SchemaVersion:0.1.0 ShortDescription:Docker Desktop commands (Beta) Vendor:Docker Inc. Version:v0.1.6] map[Name:dev Path:C:\Program Files\Docker\cli-plugins\docker-dev.exe SchemaVersion:0.1.0 ShortDescription:Docker Dev Environments Vendor:Docker Inc. Version:v0.1.2] map[Name:extension Path:C:\Program Files\Docker\cli-plugins\docker-extension.exe SchemaVersion:0.1.0 ShortDescription:Manages Docker extensions Vendor:Docker Inc. Version:v0.2.27] map[Name:init Path:C:\Program Files\Docker\cli-plugins\docker-init.exe SchemaVersion:0.1.0 ShortDescription:Creates Docker-related starter files for your project Vendor:Docker Inc. Version:v1.4.0] map[Name:sbom Path:C:\Program Files\Docker\cli-plugins\docker-sbom.exe SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scout Path:C:\Program Files\Docker\cli-plugins\docker-scout.exe SchemaVersion:0.1.0 ShortDescription:Docker Scout Vendor:Docker Inc. Version:v1.17.0]] Warnings:<nil>}}
I0501 06:07:27.159764    8776 start_flags.go:310] no existing cluster config was found, will generate one from the flags 
I0501 06:07:27.216742    8776 start_flags.go:393] Using suggested 4000MB memory alloc based on sys=16128MB, container=7816MB
I0501 06:07:27.217444    8776 start_flags.go:929] Wait components to verify : map[apiserver:true system_pods:true]
I0501 06:07:27.218033    8776 out.go:177] 📌  Using Docker Desktop driver with root privileges
I0501 06:07:27.219135    8776 cni.go:84] Creating CNI manager for ""
I0501 06:07:27.219135    8776 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0501 06:07:27.219135    8776 start_flags.go:319] Found "bridge CNI" CNI - setting NetworkPlugin=cni
I0501 06:07:27.219676    8776 start.go:340] cluster config:
{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 Memory:4000 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.32.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.32.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:C:\Users\Afag:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s}
I0501 06:07:27.220863    8776 out.go:177] 👍  Starting "minikube" primary control-plane node in "minikube" cluster
I0501 06:07:27.221994    8776 cache.go:121] Beginning downloading kic base image for docker with docker
I0501 06:07:27.222500    8776 out.go:177] 🚜  Pulling base image v0.0.46 ...
I0501 06:07:27.223659    8776 preload.go:131] Checking if preload exists for k8s version v1.32.0 and runtime docker
I0501 06:07:27.223659    8776 image.go:81] Checking for gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 in local docker daemon
I0501 06:07:27.223659    8776 preload.go:146] Found local preload: C:\Users\Afag\.minikube\cache\preloaded-tarball\preloaded-images-k8s-v18-v1.32.0-docker-overlay2-amd64.tar.lz4
I0501 06:07:27.223659    8776 cache.go:56] Caching tarball of preloaded images
I0501 06:07:27.224170    8776 preload.go:172] Found C:\Users\Afag\.minikube\cache\preloaded-tarball\preloaded-images-k8s-v18-v1.32.0-docker-overlay2-amd64.tar.lz4 in cache, skipping download
I0501 06:07:27.224170    8776 cache.go:59] Finished verifying existence of preloaded tar for v1.32.0 on docker
I0501 06:07:27.224771    8776 profile.go:143] Saving config to C:\Users\Afag\.minikube\profiles\minikube\config.json ...
I0501 06:07:27.224771    8776 lock.go:35] WriteFile acquiring C:\Users\Afag\.minikube\profiles\minikube\config.json: {Name:mk8279f5e00f0b1275a88f505f3da7a58b24c7f1 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0501 06:07:27.399740    8776 cache.go:150] Downloading gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 to local cache
I0501 06:07:27.400250    8776 localpath.go:146] windows sanitize: C:\Users\Afag\.minikube\cache\kic\amd64\kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279.tar -> C:\Users\Afag\.minikube\cache\kic\amd64\kicbase_v0.0.46@sha256_fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279.tar
I0501 06:07:27.400250    8776 localpath.go:146] windows sanitize: C:\Users\Afag\.minikube\cache\kic\amd64\kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279.tar -> C:\Users\Afag\.minikube\cache\kic\amd64\kicbase_v0.0.46@sha256_fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279.tar
I0501 06:07:27.400250    8776 image.go:65] Checking for gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 in local cache directory
I0501 06:07:27.400250    8776 image.go:68] Found gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 in local cache directory, skipping pull
I0501 06:07:27.400250    8776 image.go:137] gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 exists in cache, skipping pull
I0501 06:07:27.400250    8776 cache.go:153] successfully saved gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 as a tarball
I0501 06:07:27.400787    8776 cache.go:163] Loading gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 from local cache
I0501 06:07:27.400787    8776 localpath.go:146] windows sanitize: C:\Users\Afag\.minikube\cache\kic\amd64\kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279.tar -> C:\Users\Afag\.minikube\cache\kic\amd64\kicbase_v0.0.46@sha256_fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279.tar
I0501 06:07:57.644060    8776 cache.go:165] successfully loaded and using gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 from cached tarball
I0501 06:07:57.644060    8776 cache.go:227] Successfully downloaded all kic artifacts
I0501 06:07:57.645217    8776 start.go:360] acquireMachinesLock for minikube: {Name:mk1b55ed9fd6509931762d493a27a2f12da022e3 Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0501 06:07:57.645217    8776 start.go:364] duration metric: took 0s to acquireMachinesLock for "minikube"
I0501 06:07:57.645217    8776 start.go:93] Provisioning new machine with config: &{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 Memory:4000 CPUs:2 DiskSize:20000 Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:8443 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.32.0 ClusterName:minikube Namespace:default APIServerHAVIP: APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.32.0 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:C:\Users\Afag:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 GPUs: AutoPauseInterval:1m0s} &{Name: IP: Port:8443 KubernetesVersion:v1.32.0 ContainerRuntime:docker ControlPlane:true Worker:true}
I0501 06:07:57.645798    8776 start.go:125] createHost starting for "" (driver="docker")
I0501 06:07:57.647481    8776 out.go:235] 🔥  Creating docker container (CPUs=2, Memory=4000MB) ...
I0501 06:07:57.648903    8776 start.go:159] libmachine.API.Create for "minikube" (driver="docker")
I0501 06:07:57.649425    8776 client.go:168] LocalClient.Create starting
I0501 06:07:57.650045    8776 main.go:141] libmachine: Reading certificate data from C:\Users\Afag\.minikube\certs\ca.pem
I0501 06:07:57.678137    8776 main.go:141] libmachine: Decoding PEM data...
I0501 06:07:57.678137    8776 main.go:141] libmachine: Parsing certificate...
I0501 06:07:57.678137    8776 main.go:141] libmachine: Reading certificate data from C:\Users\Afag\.minikube\certs\cert.pem
I0501 06:07:57.708003    8776 main.go:141] libmachine: Decoding PEM data...
I0501 06:07:57.708003    8776 main.go:141] libmachine: Parsing certificate...
I0501 06:07:57.758636    8776 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
W0501 06:07:57.830645    8776 cli_runner.go:211] docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}" returned with exit code 1
I0501 06:07:57.846491    8776 network_create.go:284] running [docker network inspect minikube] to gather additional debugging logs...
I0501 06:07:57.846491    8776 cli_runner.go:164] Run: docker network inspect minikube
W0501 06:07:57.934346    8776 cli_runner.go:211] docker network inspect minikube returned with exit code 1
I0501 06:07:57.934346    8776 network_create.go:287] error running [docker network inspect minikube]: docker network inspect minikube: exit status 1
stdout:
[]

stderr:
Error response from daemon: network minikube not found
I0501 06:07:57.934346    8776 network_create.go:289] output of [docker network inspect minikube]: -- stdout --
[]

-- /stdout --
** stderr ** 
Error response from daemon: network minikube not found

** /stderr **
I0501 06:07:57.955713    8776 cli_runner.go:164] Run: docker network inspect bridge --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
I0501 06:07:58.124987    8776 network.go:206] using free private subnet 192.168.49.0/24: &{IP:192.168.49.0 Netmask:255.255.255.0 Prefix:24 CIDR:192.168.49.0/24 Gateway:192.168.49.1 ClientMin:192.168.49.2 ClientMax:192.168.49.254 Broadcast:192.168.49.255 IsPrivate:true Interface:{IfaceName: IfaceIPv4: IfaceMTU:0 IfaceMAC:} reservation:0xc0014efe00}
I0501 06:07:58.124987    8776 network_create.go:124] attempt to create docker network minikube 192.168.49.0/24 with gateway 192.168.49.1 and MTU of 1500 ...
I0501 06:07:58.140671    8776 cli_runner.go:164] Run: docker network create --driver=bridge --subnet=192.168.49.0/24 --gateway=192.168.49.1 -o --ip-masq -o --icc -o com.docker.network.driver.mtu=1500 --label=created_by.minikube.sigs.k8s.io=true --label=name.minikube.sigs.k8s.io=minikube minikube
I0501 06:07:58.340276    8776 network_create.go:108] docker network minikube 192.168.49.0/24 created
I0501 06:07:58.340468    8776 kic.go:121] calculated static IP "192.168.49.2" for the "minikube" container
I0501 06:07:58.404728    8776 cli_runner.go:164] Run: docker ps -a --format {{.Names}}
I0501 06:07:58.691326    8776 cli_runner.go:164] Run: docker volume create minikube --label name.minikube.sigs.k8s.io=minikube --label created_by.minikube.sigs.k8s.io=true
I0501 06:07:58.807861    8776 oci.go:103] Successfully created a docker volume minikube
I0501 06:07:58.872508    8776 cli_runner.go:164] Run: docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 -d /var/lib
W0501 06:08:00.397316    8776 cli_runner.go:211] docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 -d /var/lib returned with exit code 255
I0501 06:08:00.397867    8776 cli_runner.go:217] Completed: docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 -d /var/lib: (1.5248084s)
I0501 06:08:00.399081    8776 client.go:171] duration metric: took 2.7496553s to LocalClient.Create
I0501 06:08:02.412607    8776 ssh_runner.go:195] Run: sh -c "df -h /var | awk 'NR==2{print $5}'"
I0501 06:08:02.436855    8776 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W0501 06:08:02.534267    8776 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I0501 06:08:02.534267    8776 retry.go:31] will retry after 340.712027ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "minikube": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0501 06:08:02.909090    8776 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W0501 06:08:03.009902    8776 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I0501 06:08:03.009902    8776 retry.go:31] will retry after 197.805985ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "minikube": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0501 06:08:03.243911    8776 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W0501 06:08:03.327939    8776 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I0501 06:08:03.327939    8776 retry.go:31] will retry after 596.763701ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "minikube": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0501 06:08:03.968654    8776 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W0501 06:08:04.117032    8776 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
W0501 06:08:04.117032    8776 start.go:268] error running df -h /var: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "minikube": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube

W0501 06:08:04.117564    8776 start.go:235] error getting percentage of /var that is free: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "minikube": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0501 06:08:04.134668    8776 ssh_runner.go:195] Run: sh -c "df -BG /var | awk 'NR==2{print $4}'"
I0501 06:08:04.170099    8776 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W0501 06:08:04.284213    8776 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I0501 06:08:04.284213    8776 retry.go:31] will retry after 168.021389ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "minikube": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0501 06:08:04.479162    8776 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W0501 06:08:04.586564    8776 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I0501 06:08:04.586621    8776 retry.go:31] will retry after 380.758365ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "minikube": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0501 06:08:04.995489    8776 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W0501 06:08:05.098216    8776 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I0501 06:08:05.098348    8776 retry.go:31] will retry after 356.372409ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "minikube": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0501 06:08:05.492498    8776 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W0501 06:08:05.623866    8776 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
W0501 06:08:05.624391    8776 start.go:283] error running df -BG /var: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "minikube": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube

W0501 06:08:05.624391    8776 start.go:240] error getting GiB of /var that is available: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "minikube": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0501 06:08:05.624391    8776 start.go:128] duration metric: took 7.9785928s to createHost
I0501 06:08:05.624391    8776 start.go:83] releasing machines lock for "minikube", held for 7.9791742s
W0501 06:08:05.624391    8776 start.go:714] error starting host: creating host: create: creating: setting up container node: preparing volume for minikube container: docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 -d /var/lib: exit status 255
stdout:

stderr:
exec /usr/bin/test: exec format error
I0501 06:08:05.695756    8776 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0501 06:08:05.766714    8776 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0501 06:08:05.766714    8776 delete.go:82] Unable to get host status for minikube, assuming it has already been deleted: state: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
W0501 06:08:05.766714    8776 out.go:270] 🤦  StartHost failed, but will try again: creating host: create: creating: setting up container node: preparing volume for minikube container: docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 -d /var/lib: exit status 255
stdout:

stderr:
exec /usr/bin/test: exec format error

I0501 06:08:05.767903    8776 start.go:729] Will try again in 5 seconds ...
I0501 06:08:10.769282    8776 start.go:360] acquireMachinesLock for minikube: {Name:mk1b55ed9fd6509931762d493a27a2f12da022e3 Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0501 06:08:10.769282    8776 start.go:364] duration metric: took 0s to acquireMachinesLock for "minikube"
I0501 06:08:10.769892    8776 start.go:96] Skipping create...Using existing machine configuration
I0501 06:08:10.769892    8776 fix.go:54] fixHost starting: 
I0501 06:08:10.854844    8776 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0501 06:08:10.998769    8776 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0501 06:08:10.998769    8776 fix.go:112] recreateIfNeeded on minikube: state= err=unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0501 06:08:10.998769    8776 fix.go:117] machineExists: false. err=machine does not exist
I0501 06:08:11.003088    8776 out.go:177] 🤷  docker "minikube" container is missing, will recreate.
I0501 06:08:11.004454    8776 delete.go:124] DEMOLISHING minikube ...
I0501 06:08:11.085732    8776 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0501 06:08:11.223809    8776 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
W0501 06:08:11.223809    8776 stop.go:83] unable to get state: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0501 06:08:11.223809    8776 delete.go:128] stophost failed (probably ok): ssh power off: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0501 06:08:11.285607    8776 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0501 06:08:11.355974    8776 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0501 06:08:11.355974    8776 delete.go:82] Unable to get host status for minikube, assuming it has already been deleted: state: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0501 06:08:11.375852    8776 cli_runner.go:164] Run: docker container inspect -f {{.Id}} minikube
W0501 06:08:11.445964    8776 cli_runner.go:211] docker container inspect -f {{.Id}} minikube returned with exit code 1
I0501 06:08:11.445964    8776 kic.go:371] could not find the container minikube to remove it. will try anyways
I0501 06:08:11.464802    8776 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0501 06:08:11.531037    8776 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
W0501 06:08:11.531037    8776 oci.go:84] error getting container status, will try to delete anyways: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0501 06:08:11.550836    8776 cli_runner.go:164] Run: docker exec --privileged -t minikube /bin/bash -c "sudo init 0"
W0501 06:08:11.617786    8776 cli_runner.go:211] docker exec --privileged -t minikube /bin/bash -c "sudo init 0" returned with exit code 1
I0501 06:08:11.618322    8776 oci.go:656] error shutdown minikube: docker exec --privileged -t minikube /bin/bash -c "sudo init 0": exit status 1
stdout:

stderr:
Error response from daemon: No such container: minikube
I0501 06:08:12.646939    8776 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0501 06:08:12.772785    8776 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0501 06:08:12.772785    8776 oci.go:668] temporary error verifying shutdown: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0501 06:08:12.772785    8776 oci.go:670] temporary error: container minikube status is  but expect it to be exited
I0501 06:08:12.772785    8776 retry.go:31] will retry after 676.232661ms: couldn't verify container is exited. %v: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0501 06:08:13.488874    8776 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0501 06:08:13.615226    8776 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0501 06:08:13.615226    8776 oci.go:668] temporary error verifying shutdown: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0501 06:08:13.615226    8776 oci.go:670] temporary error: container minikube status is  but expect it to be exited
I0501 06:08:13.615226    8776 retry.go:31] will retry after 984.089813ms: couldn't verify container is exited. %v: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0501 06:08:14.643462    8776 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0501 06:08:14.782080    8776 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0501 06:08:14.782080    8776 oci.go:668] temporary error verifying shutdown: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0501 06:08:14.782080    8776 oci.go:670] temporary error: container minikube status is  but expect it to be exited
I0501 06:08:14.782080    8776 retry.go:31] will retry after 1.365129901s: couldn't verify container is exited. %v: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0501 06:08:16.194293    8776 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0501 06:08:16.353094    8776 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0501 06:08:16.353094    8776 oci.go:668] temporary error verifying shutdown: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0501 06:08:16.353094    8776 oci.go:670] temporary error: container minikube status is  but expect it to be exited
I0501 06:08:16.353094    8776 retry.go:31] will retry after 1.579985683s: couldn't verify container is exited. %v: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0501 06:08:17.974238    8776 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0501 06:08:18.129424    8776 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0501 06:08:18.131184    8776 oci.go:668] temporary error verifying shutdown: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0501 06:08:18.131184    8776 oci.go:670] temporary error: container minikube status is  but expect it to be exited
I0501 06:08:18.131184    8776 retry.go:31] will retry after 3.767093703s: couldn't verify container is exited. %v: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0501 06:08:21.914601    8776 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0501 06:08:21.982733    8776 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0501 06:08:21.983275    8776 oci.go:668] temporary error verifying shutdown: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0501 06:08:21.983275    8776 oci.go:670] temporary error: container minikube status is  but expect it to be exited
I0501 06:08:21.983275    8776 retry.go:31] will retry after 5.143252679s: couldn't verify container is exited. %v: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0501 06:08:27.165877    8776 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
W0501 06:08:27.256298    8776 cli_runner.go:211] docker container inspect minikube --format={{.State.Status}} returned with exit code 1
I0501 06:08:27.256298    8776 oci.go:668] temporary error verifying shutdown: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0501 06:08:27.256298    8776 oci.go:670] temporary error: container minikube status is  but expect it to be exited
I0501 06:08:27.256850    8776 oci.go:88] couldn't shut down minikube (might be okay): verify shutdown: couldn't verify container is exited. %v: unknown state "minikube": docker container inspect minikube --format={{.State.Status}}: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
 
I0501 06:08:27.283441    8776 cli_runner.go:164] Run: docker rm -f -v minikube
I0501 06:08:27.393601    8776 cli_runner.go:164] Run: docker container inspect -f {{.Id}} minikube
W0501 06:08:27.457878    8776 cli_runner.go:211] docker container inspect -f {{.Id}} minikube returned with exit code 1
I0501 06:08:27.474343    8776 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
I0501 06:08:27.608806    8776 cli_runner.go:164] Run: docker network rm minikube
I0501 06:08:28.180383    8776 fix.go:124] Sleeping 1 second for extra luck!
I0501 06:08:29.181433    8776 start.go:125] createHost starting for "" (driver="docker")
I0501 06:08:29.184594    8776 out.go:235] 🔥  Creating docker container (CPUs=2, Memory=4000MB) ...
I0501 06:08:29.185788    8776 start.go:159] libmachine.API.Create for "minikube" (driver="docker")
I0501 06:08:29.185788    8776 client.go:168] LocalClient.Create starting
I0501 06:08:29.186629    8776 main.go:141] libmachine: Reading certificate data from C:\Users\Afag\.minikube\certs\ca.pem
I0501 06:08:29.187325    8776 main.go:141] libmachine: Decoding PEM data...
I0501 06:08:29.187325    8776 main.go:141] libmachine: Parsing certificate...
I0501 06:08:29.187325    8776 main.go:141] libmachine: Reading certificate data from C:\Users\Afag\.minikube\certs\cert.pem
I0501 06:08:29.188064    8776 main.go:141] libmachine: Decoding PEM data...
I0501 06:08:29.188118    8776 main.go:141] libmachine: Parsing certificate...
I0501 06:08:29.235334    8776 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
W0501 06:08:29.397667    8776 cli_runner.go:211] docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}" returned with exit code 1
I0501 06:08:29.451306    8776 network_create.go:284] running [docker network inspect minikube] to gather additional debugging logs...
I0501 06:08:29.451306    8776 cli_runner.go:164] Run: docker network inspect minikube
W0501 06:08:29.607229    8776 cli_runner.go:211] docker network inspect minikube returned with exit code 1
I0501 06:08:29.607316    8776 network_create.go:287] error running [docker network inspect minikube]: docker network inspect minikube: exit status 1
stdout:
[]

stderr:
Error response from daemon: network minikube not found
I0501 06:08:29.607316    8776 network_create.go:289] output of [docker network inspect minikube]: -- stdout --
[]

-- /stdout --
** stderr ** 
Error response from daemon: network minikube not found

** /stderr **
I0501 06:08:29.654758    8776 cli_runner.go:164] Run: docker network inspect bridge --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
I0501 06:08:29.935755    8776 network.go:209] skipping subnet 192.168.49.0/24 that is reserved: &{IP:192.168.49.0 Netmask:255.255.255.0 Prefix:24 CIDR:192.168.49.0/24 Gateway:192.168.49.1 ClientMin:192.168.49.2 ClientMax:192.168.49.254 Broadcast:192.168.49.255 IsPrivate:true Interface:{IfaceName: IfaceIPv4: IfaceMTU:0 IfaceMAC:} reservation:<nil>}
I0501 06:08:29.984925    8776 network.go:206] using free private subnet 192.168.58.0/24: &{IP:192.168.58.0 Netmask:255.255.255.0 Prefix:24 CIDR:192.168.58.0/24 Gateway:192.168.58.1 ClientMin:192.168.58.2 ClientMax:192.168.58.254 Broadcast:192.168.58.255 IsPrivate:true Interface:{IfaceName: IfaceIPv4: IfaceMTU:0 IfaceMAC:} reservation:0xc00200b1a0}
I0501 06:08:29.984925    8776 network_create.go:124] attempt to create docker network minikube 192.168.58.0/24 with gateway 192.168.58.1 and MTU of 1500 ...
I0501 06:08:30.005321    8776 cli_runner.go:164] Run: docker network create --driver=bridge --subnet=192.168.58.0/24 --gateway=192.168.58.1 -o --ip-masq -o --icc -o com.docker.network.driver.mtu=1500 --label=created_by.minikube.sigs.k8s.io=true --label=name.minikube.sigs.k8s.io=minikube minikube
I0501 06:08:30.200727    8776 network_create.go:108] docker network minikube 192.168.58.0/24 created
I0501 06:08:30.200727    8776 kic.go:121] calculated static IP "192.168.58.2" for the "minikube" container
I0501 06:08:30.267266    8776 cli_runner.go:164] Run: docker ps -a --format {{.Names}}
I0501 06:08:30.471058    8776 cli_runner.go:164] Run: docker volume create minikube --label name.minikube.sigs.k8s.io=minikube --label created_by.minikube.sigs.k8s.io=true
I0501 06:08:30.538361    8776 oci.go:103] Successfully created a docker volume minikube
I0501 06:08:30.561435    8776 cli_runner.go:164] Run: docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 -d /var/lib
W0501 06:08:31.462169    8776 cli_runner.go:211] docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 -d /var/lib returned with exit code 255
I0501 06:08:31.462511    8776 client.go:171] duration metric: took 2.2767234s to LocalClient.Create
I0501 06:08:33.478783    8776 ssh_runner.go:195] Run: sh -c "df -h /var | awk 'NR==2{print $5}'"
I0501 06:08:33.512941    8776 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W0501 06:08:33.580329    8776 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I0501 06:08:33.580887    8776 retry.go:31] will retry after 261.558774ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "minikube": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0501 06:08:33.886883    8776 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W0501 06:08:34.029138    8776 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I0501 06:08:34.029138    8776 retry.go:31] will retry after 270.692326ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "minikube": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0501 06:08:34.348444    8776 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W0501 06:08:34.504127    8776 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I0501 06:08:34.504127    8776 retry.go:31] will retry after 517.043316ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "minikube": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0501 06:08:35.070169    8776 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W0501 06:08:35.214345    8776 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
W0501 06:08:35.214936    8776 start.go:268] error running df -h /var: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "minikube": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube

W0501 06:08:35.214936    8776 start.go:235] error getting percentage of /var that is free: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "minikube": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0501 06:08:35.230586    8776 ssh_runner.go:195] Run: sh -c "df -BG /var | awk 'NR==2{print $4}'"
I0501 06:08:35.271559    8776 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W0501 06:08:35.365947    8776 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I0501 06:08:35.366457    8776 retry.go:31] will retry after 206.619632ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "minikube": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0501 06:08:35.625586    8776 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W0501 06:08:35.726183    8776 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I0501 06:08:35.726726    8776 retry.go:31] will retry after 228.396628ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "minikube": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0501 06:08:35.983007    8776 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W0501 06:08:36.066109    8776 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I0501 06:08:36.066109    8776 retry.go:31] will retry after 659.530034ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "minikube": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0501 06:08:36.753699    8776 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W0501 06:08:36.820022    8776 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
W0501 06:08:36.820624    8776 start.go:283] error running df -BG /var: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "minikube": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube

W0501 06:08:36.820624    8776 start.go:240] error getting GiB of /var that is available: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "minikube": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0501 06:08:36.820624    8776 start.go:128] duration metric: took 7.6391907s to createHost
I0501 06:08:36.826763    8776 ssh_runner.go:195] Run: sh -c "df -h /var | awk 'NR==2{print $5}'"
I0501 06:08:36.844269    8776 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W0501 06:08:36.920585    8776 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I0501 06:08:36.920585    8776 retry.go:31] will retry after 353.614068ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "minikube": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0501 06:08:37.293304    8776 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W0501 06:08:37.358335    8776 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I0501 06:08:37.358335    8776 retry.go:31] will retry after 389.554841ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "minikube": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0501 06:08:37.770392    8776 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W0501 06:08:37.838716    8776 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I0501 06:08:37.838716    8776 retry.go:31] will retry after 389.393496ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "minikube": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0501 06:08:38.254237    8776 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W0501 06:08:38.347902    8776 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
W0501 06:08:38.347902    8776 start.go:268] error running df -h /var: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "minikube": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube

W0501 06:08:38.347902    8776 start.go:235] error getting percentage of /var that is free: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "minikube": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0501 06:08:38.358092    8776 ssh_runner.go:195] Run: sh -c "df -BG /var | awk 'NR==2{print $4}'"
I0501 06:08:38.381939    8776 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W0501 06:08:38.474452    8776 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I0501 06:08:38.474452    8776 retry.go:31] will retry after 201.42153ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "minikube": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0501 06:08:38.710553    8776 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W0501 06:08:38.821746    8776 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I0501 06:08:38.822382    8776 retry.go:31] will retry after 476.317023ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "minikube": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0501 06:08:39.348411    8776 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W0501 06:08:39.520602    8776 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I0501 06:08:39.520602    8776 retry.go:31] will retry after 609.465497ms: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "minikube": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0501 06:08:40.193292    8776 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
W0501 06:12:37.129239    8776 cli_runner.go:211] docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube returned with exit code 1
I0501 06:12:37.129239    8776 cli_runner.go:217] Completed: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube: (3m56.9303644s)
W0501 06:12:37.129239    8776 start.go:283] error running df -BG /var: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "minikube": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube

W0501 06:12:37.129239    8776 start.go:240] error getting GiB of /var that is available: NewSession: new client: new client: Error creating new ssh host from driver: Error getting ssh port for driver: get ssh host-port: get port 22 for "minikube": docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube: exit status 1
stdout:


stderr:
Error response from daemon: No such container: minikube
I0501 06:12:37.129239    8776 fix.go:56] duration metric: took 4m26.3593469s for fixHost
I0501 06:12:37.129239    8776 start.go:83] releasing machines lock for "minikube", held for 4m26.3599575s
W0501 06:12:37.140477    8776 out.go:270] 😿  Failed to start docker container. Running "minikube delete" may fix it: recreate: creating host: create: creating: setting up container node: preparing volume for minikube container: docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 -d /var/lib: exit status 255
stdout:

stderr:
exec /usr/bin/test: exec format error

I0501 06:12:37.276236    8776 out.go:201] 
W0501 06:12:37.286736    8776 out.go:270] ❌  Exiting due to GUEST_PROVISION: error provisioning guest: Failed to start host: recreate: creating host: create: creating: setting up container node: preparing volume for minikube container: docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.46@sha256:fd2d445ddcc33ebc5c6b68a17e6219ea207ce63c005095ea1525296da2d1a279 -d /var/lib: exit status 255
stdout:

stderr:
exec /usr/bin/test: exec format error

W0501 06:12:37.286736    8776 out.go:270] 
W0501 06:12:37.294758    8776 out.go:293] [31m╭───────────────────────────────────────────────────────────────────────────────────────────╮[0m
[31m│[0m                                                                                           [31m│[0m
[31m│[0m    😿  If the above advice does not help, please let us know:                             [31m│[0m
[31m│[0m    👉  https://github.com/kubernetes/minikube/issues/new/choose                           [31m│[0m
[31m│[0m                                                                                           [31m│[0m
[31m│[0m    Please run `minikube logs --file=logs.txt` and attach logs.txt to the GitHub issue.    [31m│[0m
[31m│[0m                                                                                           [31m│[0m
[31m╰───────────────────────────────────────────────────────────────────────────────────────────╯[0m
I0501 06:12:37.381296    8776 out.go:201] 


